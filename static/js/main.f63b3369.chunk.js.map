{"version":3,"sources":["App.tsx","components/Tabs.tsx","components/Tab.tsx","components/Home.tsx","index.tsx"],"names":["App","useParams","path","to","className","isActive","cn","tabs","id","title","content","Tabs","tabId","map","tab","Tab","tabObject","find","Home","createRoot","document","getElementById","render","element","index"],"mappings":"yOAWaA,EAAM,WAGjB,MAAa,SAFIC,cAATC,KAGC,cAAC,IAAD,CAAUC,GAAG,MAIpB,qCACE,qBACEC,UAAU,oDACV,UAAQ,MAFV,SAIE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CACED,GAAG,IACHC,UAAW,gBAAGC,EAAH,EAAGA,SAAH,OAAkBC,IAC3B,cACA,CAAE,YAAaD,GAFN,EAFb,kBAUA,cAAC,IAAD,CACEF,GAAG,QACHC,UAAW,gBAAGC,EAAH,EAAGA,SAAH,OAAkBC,IAC3B,cACA,CAAE,YAAaD,GAFN,EAFb,yBAaN,qBAAKD,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,cAAC,IAAD,UAKT,ECrDKG,EAAO,CACX,CAAEC,GAAI,QAASC,MAAO,QAASC,QAAS,eACxC,CAAEF,GAAI,QAASC,MAAO,QAASC,QAAS,eACxC,CAAEF,GAAI,QAASC,MAAO,QAASC,QAAS,gBAG7BC,EAAO,WAClB,IAAQC,EAAUX,cAAVW,MAER,OACE,qCACE,oBAAIR,UAAU,QAAd,uBAEA,qBAAKA,UAAU,gBAAf,SACE,6BACGG,EAAKM,KAAI,SAAAC,GAAG,OACX,oBACEV,UAAWE,IAAG,CAAE,YAAaQ,EAAIN,KAAOI,IAExC,UAAQ,MAHV,SAKE,cAAC,IAAD,CACET,GAAIW,EAAIN,GADV,SAGGM,EAAIL,SANFK,EAAIN,GAHA,QAehBI,EACG,cAAC,IAAD,IAEA,qBAAKR,UAAU,QAAQ,UAAQ,aAA/B,mCAOT,ECzCKG,EAAO,CACX,CAAEC,GAAI,QAASC,MAAO,QAASC,QAAS,eACxC,CAAEF,GAAI,QAASC,MAAO,QAASC,QAAS,eACxC,CAAEF,GAAI,QAASC,MAAO,QAASC,QAAS,gBAG7BK,EAAM,WACjB,IAAQH,EAAUX,cAAVW,MAEFI,EAAYT,EAAKU,MAAK,SAAAH,GAAG,OAAIA,EAAIN,KAAOI,CAAf,IAE/B,OACE,qBAAKR,UAAU,QAAQ,UAAQ,aAA/B,SACGY,EACGA,EAAUN,QACV,uBAGT,ECpBYQ,EAAO,kBAClB,oBAAId,UAAU,QAAd,sBADkB,ECWpBe,qBACEC,SAASC,eAAe,SACxBC,OACA,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAOpB,KAAK,UAAUqB,QAAS,cAAC,EAAD,IAA/B,UACE,cAAC,IAAD,CAAOC,OAAK,EAACD,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOrB,KAAK,OAAOqB,QAAS,cAAC,EAAD,IAA5B,SACE,cAAC,IAAD,CAAOrB,KAAK,SAASqB,QAAS,cAAC,EAAD,QAEhC,cAAC,IAAD,CACErB,KAAK,IACLqB,QAAS,oBAAInB,UAAU,QAAd,qC","file":"static/js/main.f63b3369.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport cn from 'classnames';\nimport {\n  NavLink,\n  Navigate,\n  Outlet,\n  useParams,\n} from 'react-router-dom';\n\nexport const App = () => {\n  const { path } = useParams();\n\n  if (path === 'home') {\n    return <Navigate to=\"/\" />;\n  }\n\n  return (\n    <>\n      <nav\n        className=\"navbar is-light is-fixed-top is-mobile has-shadow\"\n        data-cy=\"Nav\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink\n              to=\"/\"\n              className={({ isActive }) => cn(\n                'navbar-item',\n                { 'is-active': isActive },\n              )}\n            >\n              Home\n            </NavLink>\n\n            <NavLink\n              to=\"/tabs\"\n              className={({ isActive }) => cn(\n                'navbar-item',\n                { 'is-active': isActive },\n              )}\n            >\n              Tabs\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <div className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </div>\n    </>\n  );\n};\n","import cn from 'classnames';\nimport { Link, Outlet, useParams } from 'react-router-dom';\n\nconst tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const Tabs = () => {\n  const { tabId } = useParams();\n\n  return (\n    <>\n      <h1 className=\"title\">Tabs page</h1>\n\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              className={cn({ 'is-active': tab.id === tabId })}\n              key={tab.id}\n              data-cy=\"Tab\"\n            >\n              <Link\n                to={tab.id}\n              >\n                {tab.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n      {tabId\n        ? <Outlet />\n        : (\n          <div className=\"block\" data-cy=\"TabContent\">\n            Please select a tab\n          </div>\n        )}\n\n    </>\n  );\n};\n","import { useParams } from 'react-router-dom';\n\nconst tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const Tab = () => {\n  const { tabId } = useParams();\n\n  const tabObject = tabs.find(tab => tab.id === tabId);\n\n  return (\n    <div className=\"block\" data-cy=\"TabContent\">\n      {tabObject\n        ? tabObject.content\n        : 'Please select a tab'}\n    </div>\n  );\n};\n","export const Home = () => (\n  <h1 className=\"title\">Home page</h1>\n);\n","import { createRoot } from 'react-dom/client';\nimport {\n  HashRouter,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './components/Tab';\nimport { Home } from './components/Home';\n\ncreateRoot(\n  document.getElementById('root') as HTMLElement,\n).render(\n  <HashRouter>\n    <Routes>\n      <Route path=\"/:path?\" element={<App />}>\n        <Route index element={<Home />} />\n        <Route path=\"tabs\" element={<Tabs />}>\n          <Route path=\":tabId\" element={<Tab />} />\n        </Route>\n        <Route\n          path=\"*\"\n          element={<h1 className=\"title\">Page not found</h1>}\n        />\n      </Route>\n    </Routes>\n  </HashRouter>,\n);\n"],"sourceRoot":""}